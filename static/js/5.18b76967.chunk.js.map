{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormControls.js","utils/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","input","Input","createField","placeholder","name","component","validators","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialogWrapper","dialogAvatar","src","avatar","alt","dialog","link","to","MessageItem","messagesBox","message","maxLength100","Dialogs","console","log","dialogsElement","dialogsPage","dialogs","map","key","messagesElement","messages","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","main","addMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.18b76967.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__GE7O2\",\"error\":\"FormControls_error__2ckkk\",\"formSummaryError\":\"FormControls_formSummaryError__3Dsfj\"};","import React from \"react\";\r\nimport s from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : null)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props}><textarea {...props.input}{...props}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return <FormControl {...props}><input{...props.input}{...props}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text=\"\") => <div><Field placeholder={placeholder}\r\n                                                                                            name={name}\r\n                                                                                            component={component}\r\n                                                                                            validate={validators}\r\n                                                                                            {...props}/>{text}</div>;\r\n","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max Length is exceeded: ${maxLength}`\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dialogs_main__2DiVI\",\"dialogs\":\"Dialogs_dialogs__3ouEk\",\"dialog\":\"Dialogs_dialog__3JQRL\",\"messages\":\"Dialogs_messages__3YiuY\",\"message\":\"Dialogs_message__HL6aL\",\"messageSendArea\":\"Dialogs_messageSendArea__27jrl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1zPQD\",\"link\":\"DialogItem_link__2clCB\",\"dialogWrapper\":\"DialogItem_dialogWrapper__2Xc3G\",\"dialogAvatar\":\"DialogItem_dialogAvatar__3pH6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessageItem_message__3HrSD\",\"messagesBox\":\"MessageItem_messagesBox__2ItDA\"};","import React from \"react\";\r\nimport s from \"./DialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div>\r\n            <div className={s.dialogWrapper}>\r\n                <div className={s.dialogAvatar}>\r\n                    <img src={props.avatar} alt='avatar'/>\r\n                </div>\r\n                <div className={s.dialog}>\r\n                    <NavLink className={s.link} to={path}>{props.name}</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;\r\n\r\n","import React from \"react\";\r\nimport s from \"./MessageItem.module.css\"\r\n\r\nconst MessageItem = (props) => {\r\n    return (<div className={s.messagesBox}>\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRKDM99rvtftg7ZHF5_cfcYMIddC35KSuaJ8Q&usqp=CAU' alt='avatar'/>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MessageItem;\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nconst maxLength100 =  maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n    console.log(\"dialogs rendered\")\r\n\r\n    let dialogsElement = props.dialogsPage.dialogs\r\n        .map((dialog => <DialogItem name={dialog.name} id={dialog.id} avatar={dialog.avatar} key={dialog.id}/>)\r\n        );\r\n    let messagesElement = props.dialogsPage.messages\r\n        .map((message => <MessageItem message={message.message} key={message.id}/>)\r\n        );\r\n\r\n    const AddMessageForm = (props) => {\r\n        return (<>\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter Your Message\"} validate={[required,maxLength100]}/>\r\n                    <button>Send</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    let addMessage = (value) => {\r\n        props.addMessage(value.newMessageBody)\r\n    }\r\n\r\n    const AddMessageReduxForm = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.dialogs}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n                <AddMessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import Dialogs from \"./Dialogs\";\r\nimport {addMessageCreator} from \"../../redux/dialogs-reducer\"\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}