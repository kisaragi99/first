{"version":3,"sources":["serviceWorker.js","components/Navbar/NavElement/NavElement.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","utils/object-helpers.js","redux/friends-reducer.js","assets/images/avatar.png","components/common/Paginators/Pagination.js","components/Friends/Friend.js","components/Friends/FriendsPresentational.js","redux/friends-selectors.js","components/Friends/FriendsContainer.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","components/Loaders/Loader.js","components/Friends/Friends.module.css","components/Navbar/NavElement/NavElement.module.css","components/News/News.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","api/api.js","components/Settings/Settings.module.css","components/common/Paginators/Paginators.module.css","components/Loaders/Loader.module.css"],"names":["Boolean","window","location","hostname","match","NavElement","props","className","s","item","to","addres","link","activeClassName","active","title","Navbar","nav","itemWrapper","News","Todo","useState","list","setList","value","setValue","initialId","setInitialID","deleteTodo","e","filter","todo","id","_dispatchInstances","key","todoList","map","index","onClick","text","onSubmit","preventDefault","target","reset","onChange","currentTarget","Counter","count","setCount","wrapper","plusButton","minusButton","disabled","Settings","Header","header","src","alt","loginBlock","isAuth","login","logout","HeaderContainer","this","React","Component","connect","state","auth","updateObjectInArray","items","itemId","objPropName","newObjProps","f","FOLLOW","UNFOLLOW","SET_FRIENDS","SET_CURRENT_PAGE","SET_TOTAL_FRIENDS_COUNT","TOGGLE_IS_LOADING","TOGGLE_IS_FOLLOWING_PROCESS","initialState","friends","pageSize","totalFriendsCount","currentPage","isLoading","followingInProcess","followSuccess","friendId","type","unfollowSuccess","toggleIsLoading","toggleFollowingProcess","followUnfollowFlow","dispatch","userId","apiMethod","actionCreator","a","resultCode","friendsReducer","action","followed","totalCount","Pagination","onPageChanged","pagesCount","Math","ceil","pages","i","push","p","selectedPage","Friend","friend","follow","unfollow","friendsBox","photos","small","avatar","friendsAvatar","some","name","status","FriendsPresentational","getFriends","createSelector","console","log","friendsPage","getTotalFriendsCount","getPageSize","getCurrentPage","getIsLoading","getFollowingInProcess","FriendsContainer","pageNumber","getUsers","Loader","compose","usersAPI","followUserAPI","bind","unfollowUserAPI","page","getUsersAPI","data","INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMidlleware","__store__","DialogsContainer","lazy","ProfileContainer","LoginContainer","App","initializeApp","Suspense","fallback","path","render","AppContainer","withRouter","promise","authMe","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","SET_USER_DATA","email","setAuthUserData","payload","authAPI","authMeAPI","loginMe","formData","loginAPI","messages","length","stopSubmit","_error","logoutAPI","ldsRoller","module","exports","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likesCount","profile","addPostCreator","newPostBody","setUserProfile","setStatus","getProfile","profileAPI","getProfileAPI","response","getStatus","updateStatus","postId","ADD_MESSAGE","dialogs","addMessageCreator","newMessageBody","instance","axios","withCredentials","baseURL","headers","get","delete","post","put","loginData","password","rememberMe","captcha"],"mappings":"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","file":"static/js/main.00fe4f36.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport s from \"./NavElement.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavElement = (props) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <NavLink to={props.addres} className={s.link} activeClassName = {s.active}>\r\n                {props.title}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavElement;\r\n\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport NavElement from \"./NavElement/NavElement\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.itemWrapper}>\r\n                    <NavElement title=\"Profile\" addres = \"/profile\"/>\r\n                    <NavElement title=\"Friends\" addres = \"/friends\"/>\r\n                    <NavElement title=\"News\" addres = \"/news\"/>\r\n                    <NavElement title=\"Messages\" addres = \"/dialogs\"/>\r\n                    <NavElement title=\"Settings\" addres = \"/settings\"/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {useState} from \"react\";\r\nimport s from \"./News.module.css\"\r\n\r\n\r\n// После того как закончу, надо переделать с использованием redux-form или formik\r\nconst News = () => {\r\n\r\n    const Todo = () => {\r\n\r\n        //state hooks\r\n        let [list, setList] = useState([]);\r\n        let [value, setValue] = useState(\"\")\r\n        let [initialId, setInitialID] = useState(0)\r\n\r\n\r\n        //eventHandlers\r\n        const handleChange = (e) => {\r\n            setValue(value = e.currentTarget.value);\r\n        }\r\n\r\n        const handleSubmit = (e) => {\r\n            setList(list => [...list, {text: value, id: initialId}]);\r\n            e.preventDefault();\r\n            setInitialID(initialId + 1);\r\n            e.target.reset();\r\n            setValue(\"\");\r\n        }\r\n\r\n        const deleteTodo = (e) => {\r\n            setList(list.filter(todo => todo.id != e._dispatchInstances.key)); // Это невежество тоже надо исправить\r\n        }\r\n\r\n        // \"list\" array mapping\r\n        let todoList = list.map((todo, index) => <div key={todo.id} onClick={deleteTodo}>{todo.text}</div>);\r\n\r\n\r\n        //render\r\n        return (\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleChange}></input>\r\n                <button className=\"submit\">Submit</button>\r\n                <div>{todoList}</div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    const Counter = () => {\r\n        let [count, setCount] = useState(0);\r\n\r\n        const onIncrement = () => {\r\n            setCount(count + 1);\r\n        }\r\n        const onDecrement = () => {\r\n            setCount(count - 1);\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <button className={s.plusButton} onClick={onIncrement}>+</button>\r\n                {count}\r\n                <button className={s.minusButton} onClick={onDecrement} disabled={count === 0}>-</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (<>\r\n            <Todo/>\r\n            <Counter/>\r\n        </>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport s from \"./Settings.module.css\"\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            Settings or maybe not\r\n        </div>)\r\n}\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://jlptsensei.com/wp-content/uploads/2015/02/JLPT-logo-600x298.jpg\"\r\n                alt=\"logo1\"\r\n            />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        <NavLink to={`/profile/${12530}`}>{props.login}</NavLink>\r\n                        <button onClick={props.logout}>Logout</button>\r\n                    </div>\r\n                    : \"Need Auth\"}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (<>\r\n                <Header {...this.props}/>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n\r\n\r\n\r\n\r\n","export let updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(f => {\r\n        if (f[objPropName] === itemId) {\r\n            return {...f, ...newObjProps}\r\n        }\r\n        return f\r\n    })\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_FRIENDS = 'SET_FRIENDS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_FRIENDS_COUNT = 'SET_TOTAL_FRIENDS_COUNT';\r\nconst TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING';\r\nconst TOGGLE_IS_FOLLOWING_PROCESS = 'TOGGLE_IS_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    friends: [],\r\n    pageSize: 9,\r\n    totalFriendsCount: 0,\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    followingInProcess: []\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                friends: updateObjectInArray(state.friends, action.friendId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                friends: updateObjectInArray(state.friends, action.friendId, \"id\", {followed: false})\r\n            }\r\n        case SET_FRIENDS: {\r\n            return {\r\n                ...state,\r\n                friends: action.friends\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_FRIENDS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalFriendsCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROCESS: {\r\n            return {\r\n                ...state,\r\n                followingInProcess: action.isLoading\r\n                    ? [...state.followingInProcess, action.friendId]\r\n                    : [state.followingInProcess.filter(id => id !== action.friendId)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (friendId) => ({type: FOLLOW, friendId})\r\nexport const unfollowSuccess = (friendId) => ({type: UNFOLLOW, friendId})\r\nexport const setFriends = (friends) => ({type: SET_FRIENDS, friends})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalFriendsCount = (totalCount) => ({type: SET_TOTAL_FRIENDS_COUNT, totalCount})\r\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\r\nexport const toggleFollowingProcess = (isLoading, friendId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROCESS,\r\n    isLoading,\r\n    friendId\r\n})\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsLoading(true));\r\n\r\n    let data = await usersAPI.getUsersAPI(page, pageSize)\r\n    dispatch(toggleIsLoading(false));\r\n    dispatch(setFriends(data.items));\r\n    dispatch(setTotalFriendsCount(data.totalCount));\r\n    dispatch(setCurrentPage(page));\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, userId,apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProcess(true, userId));\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProcess(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch,userId, usersAPI.followUserAPI.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch,userId, usersAPI.unfollowUserAPI.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default friendsReducer;","export default __webpack_public_path__ + \"static/media/avatar.a502917b.png\";","import React from \"react\";\r\nimport s from \"./Paginators.module.css\";\r\n\r\nlet Pagination = ({totalFriendsCount, pageSize, currentPage, onPageChanged }) => {\r\n\r\n    let pagesCount = Math.ceil(totalFriendsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <>\r\n        <div> {pages.map((p, index) => {\r\n            return <span className={currentPage === p && s.selectedPage}\r\n                         onClick={(e) => {\r\n                             onPageChanged(p)\r\n                         }} key={index}>{`${p} `}</span>\r\n\r\n        })}\r\n        </div>\r\n    </>\r\n}\r\nexport default Pagination\r\n","import React from \"react\";\r\nimport s from \"./Friends.module.css\";\r\nimport avatar from \"../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../common/Paginators/Pagination\";\r\n\r\n\r\nlet Friend = ({friend, followingInProcess, follow, unfollow}) => {\r\n\r\n    return <>\r\n                    <div className={s.friendsBox} key={friend.id}>\r\n                        <div>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + friend.id}>\r\n                                    <img src={friend.photos.small != null ? friend.photos.small : avatar}\r\n                                         className={s.friendsAvatar} alt='avatar'/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div> {friend.followed ?\r\n                                <button disabled={followingInProcess.some(id => id === friend.id )} onClick={() => {unfollow(friend.id)}}> Unfollow </button> :\r\n                                <button disabled={followingInProcess.some(id => id === friend.id )} onClick={() => {follow(friend.id)}}>Follow</button>\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div>\r\n                                <div>{friend.name}</div>\r\n                                <div>{friend.status}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div>{\"Some Country\"}</div>\r\n                                <div>{\"Some City\"}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n    </>\r\n}\r\nexport default Friend\r\n\r\n\r\n// Эта ошибка относится к коду на 47 строке \"\"\" className={props.currentPage === p && s.selectedPage} \"\"\"\r\n//index.js:1 Warning: Received `false` for a non-boolean attribute `className`.\r\n//\r\n// If you want to write it to the DOM, pass a string instead: className=\"false\" or className={value.toString()}.","import React from \"react\";\r\nimport s from \"./Friends.module.css\";\r\nimport avatar from \"../../assets/images/avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Pagination from \"../common/Paginators/Pagination\";\r\nimport Friend from \"./Friend\";\r\n\r\n\r\nlet FriendsPresentational = ({totalFriendsCount, pageSize, friends, followingInProcess, follow, unfollow, currentPage, onPageChanged, ...props}) => {\r\n\r\n    return <div>\r\n        {\r\n        friends.map((friend => <Friend key={friend.id}\r\n                                       className={s.friendsBox}\r\n                                       followingInProcess={followingInProcess}\r\n                                       follow={follow}\r\n                                       unfollow={unfollow}\r\n                                       friend={friend}/>))\r\n        }\r\n\r\n        <Pagination currentPage={currentPage}\r\n                    totalFriendsCount={totalFriendsCount}\r\n                    pageSize={pageSize}\r\n                    onPageChanged={onPageChanged}/>\r\n    </div>\r\n}\r\nexport default FriendsPresentational\r\n\r\n\r\n// Эта ошибка относится к коду на 47 строке \"\"\" className={props.currentPage === p && s.selectedPage} \"\"\"\r\n//index.js:1 Warning: Received `false` for a non-boolean attribute `className`.\r\n//\r\n// If you want to write it to the DOM, pass a string instead: className=\"false\" or className={value.toString()}.","import {createSelector} from \"reselect\";\r\n\r\nexport const getFriendsSelector = (state) => {\r\n    console.log(\"selector did something\")\r\n    return state.friendsPage.friends;\r\n}\r\n\r\nexport const getFriends = createSelector(getFriendsSelector, (friends) => {\r\n    console.log(\"SuperSelector did something\")\r\n    return friends.filter(f => true);\r\n})\r\n\r\nexport const getTotalFriendsCount = (state) => {\r\n    return state.friendsPage.totalFriendsCount;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.friendsPage.pageSize;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.friendsPage.currentPage;\r\n}\r\nexport const getIsLoading = (state) => {\r\n    return state.friendsPage.isLoading;\r\n}\r\nexport const getFollowingInProcess = (state) => {\r\n    return state.friendsPage.followingInProcess;\r\n}\r\n\r\n\r\n//\r\n// totalFriendsCount: state.friendsPage.totalFriendsCount,\r\n//     currentPage: state.friendsPage.currentPage,\r\n//     isLoading: state.friendsPage.isLoading,\r\n//     followingInProcess: state.friendsPage.followingInProcess","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    toggleFollowingProcess, getUsers\r\n} from \"../../redux/friends-reducer\";\r\nimport FriendsPresentational from \"./FriendsPresentational\";\r\nimport Loader from \"../Loaders/Loader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProcess,\r\n    getFriends,\r\n    getIsLoading,\r\n    getPageSize,\r\n    getTotalFriendsCount\r\n} from \"../../redux/friends-selectors\";\r\n\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {getUsers, currentPage, pageSize} = this.props;\r\n        getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {getUsers, pageSize} = this.props;\r\n        getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Friends rendered\")\r\n        return (<>{this.props.isLoading ? <Loader/> : null}\r\n            <FriendsPresentational friends={this.props.friends}\r\n                                   follow={this.props.follow}\r\n                                   unfollow={this.props.unfollow}\r\n                                   currentPage={this.props.currentPage}\r\n                                   onPageChanged={this.onPageChanged}\r\n                                   totalFriendsCount={this.props.totalFriendsCount}\r\n                                   pageSize={this.props.pageSize}\r\n                                   followingInProcess={this.props.followingInProcess}/>\r\n        </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: getFriends(state),\r\n        pageSize: getPageSize(state),\r\n        totalFriendsCount: getTotalFriendsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoading(state),\r\n        followingInProcess: getFollowingInProcess(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, toggleFollowingProcess, getUsers})\r\n)(FriendsContainer);\r\n\r\n\r\n","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialized = () => ({type: 'INITIALIZED'});\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    await Promise.all([promise])\r\n    dispatch(initialized());\r\n\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport friendsReducer from \"./friends-reducer\"\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMidlleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: friendsReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMidlleware)\r\n));\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n\r\n","import React, {Suspense} from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport FriendsContainer from \"./components/Friends/FriendsContainer\"\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Loader from \"./components/Loaders/Loader\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <React.Suspense fallback={<Loader/>}>\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                        <Route path=\"/friends\" render={() => <FriendsContainer/>}/>\r\n                        <Route path=\"/news\" render={() => <News/>}/>\r\n                        <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                        <Route path=\"/login\" render={() => <LoginContainer/>}/>\r\n                    </div>\r\n                </React.Suspense>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        initialized: state.app.initialized,\r\n    })\r\n}\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n// Возможен баг с роутами, поэтому мы оборачиваем в withRouter\r\n\r\nlet MainApp = () => {\r\n    return (<BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>)\r\n}\r\nexport default MainApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <MainApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: 'SET_USER_DATA', payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n        let data = await authAPI.authMeAPI()\r\n        if (data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    };\r\n\r\n// export const authMe = () => { // до рефакторинга\r\n//     return (dispatch) => {\r\n//         return authAPI.authMeAPI()\r\n//             .then(data => {\r\n//                 if (data.resultCode === 0) {\r\n//                     let {id, email, login} = data.data;\r\n//                     dispatch(setAuthUserData(id, email, login, true));\r\n//                 }\r\n//             })\r\n//\r\n//\r\n//     };\r\n// }\r\n\r\n\r\nexport const loginMe = (formData) => async (dispatch) => {\r\n    let data = await authAPI.loginAPI(formData)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(authMe());\r\n    } else {\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logoutAPI()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\n\r\nlet Loader = (props) => {\r\n    return (<div>\r\n            <div className={s.ldsRoller}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Loader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__3W0RD\",\"friendsAvatar\":\"Friends_friendsAvatar__13kT5\",\"friendsName\":\"Friends_friendsName__Ab-KV\",\"friendsBox\":\"Friends_friendsBox__1sydF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavElement_item__36vvw\",\"link\":\"NavElement_link__2uPT8\",\"active\":\"NavElement_active__g5wYv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"News_wrapper__IPwpK\",\"plusButton\":\"News_plusButton__1-t0j\",\"minusButton\":\"News_minusButton__3CfcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1yWU9\",\"itemWrapper\":\"Navbar_itemWrapper__1vpXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2qs1G\",\"loginBlock\":\"Header_loginBlock__1R4Fa\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: \"How are you?\", likesCount: 3},\r\n        {id: 2, message: \"Hi, im fine\", likesCount: 1},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {id: 7, message: action.newPostBody, likesCount: 9}]\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter((p) => p.id !== action.postId)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostCreator = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfileAPI(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"Lets play some Dota!\"}],\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Lex\",\r\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRKDM99rvtftg7ZHF5_cfcYMIddC35KSuaJ8Q&usqp=CAU\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Lost\",\r\n            avatar: \"https://svirtus.cdnvideo.ru/5BwwcdCMwq3EQKgjMP-3rOqooBg=/0x0:209x204/800x0/filters:quality(100)/https://hb.bizmrg.com/cybersportru-media/35/354cfce6f19b2bc856220f4c5f13b3c2.jpg?m=d668102fd143f399db9880ce43f8a1ae\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Smile\",\r\n            avatar: \"https://svirtus.cdnvideo.ru/T2Rx94j-A62VChGWYun076lAK98=/0x0:250x250/800x0/filters:quality(100)/https://hb.bizmrg.com/cybersportru-media/73/735bd29e228660f8d7084f56351019be.jpg?m=693b8e5540cbd57774380aef7b191044\"\r\n        }]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let text = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 9, message: text}],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"c3b6b8c4-0dfb-4a27-8050-5e4ce867a46f\"\r\n    }\r\n\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsersAPI(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    }, // This function is getting the users array from sever (ProfileContainer)\r\n\r\n    unfollowUserAPI(friendId) {\r\n        return instance.delete(`follow/${friendId}`).then(response => response.data)\r\n    }, // This function is used to unfollow a user on the server (FriendsContainer)\r\n\r\n    followUserAPI(friendId) {\r\n        return instance.post(`follow/${friendId}`).then(response => response.data)\r\n    } // This function is used to follow a user on the server (FriendsContainer)\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfileAPI(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n\r\n    authMeAPI() {\r\n        return instance.get('auth/me').then(response => response.data)\r\n    }, // This function is getting the information if the user is authorised or not (HeaderContainer)\r\n\r\n    loginAPI(loginData) {\r\n        return instance.post('auth/login', {\r\n            email: loginData.login,\r\n            password: loginData.password,\r\n            rememberMe: loginData.rememberMe,\r\n            captcha: true\r\n        })\r\n            .then(response => response.data)\r\n    }, // Login to the server\r\n\r\n    logoutAPI() {\r\n        return instance.post('auth/logout').then(response => response.data)\r\n    } // Logout from server\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Settings_wrapper__2FOUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginators_selectedPage__VVmzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"Loader_ldsRoller__ZjnZX\"};"],"sourceRoot":""}